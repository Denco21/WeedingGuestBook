@page "/PersonInfo"
@inject MessageWallDbContext _db
@using BlazorMessageWall.Data;
@using BlazorMessageWall.Models

@inject NavigationManager NavigationManager
@inject IEmailService EmailService 
@using BlazorMessageWall.Services.EmailService






<h3>Guest Booking</h3>


<EditForm Model="@personModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

	 <div class="form-group">
        <label for="FirstName">First Name:</label>
        <InputText id="FirstName" class="form-control" @bind-Value="personModel.FirstName" />
    </div>

	 <div class="form-group">
        <label for="LastName">Last Name:</label>
        <InputText id="LastName" class="form-control" @bind-Value="personModel.LastName" />
    </div>

    <div class="form-group">
        <label for="Email">Email:</label>
        <InputText id="Email" class="form-control" @bind-Value="personModel.Email" />
    </div>

    <div class="form-group">
        <label for="PhoneNumber">Phone Number:</label>
        <InputText id="PhoneNumber" class="form-control" @bind-Value="personModel.PhoneNumber" />
    </div>
    <br />

     <div class="alert alert-warning" role="alert">
        <h4 class="alert-heading">Special Request</h4>
        <p>Please use the message field below to let us know about any special requirements you may have, such as dietary restrictions or food allergies.</p>
    </div>


    <div class="form-group">
		<label for="Message">Message:</label>
		<InputText id="Message" class="form-control" @bind-Value="personModel.Message" />

</div>
    <br />
       <button type="submit" class="btn btn-primary">Submit</button>
 

</EditForm>




@code {
    private PersonModel personModel = new PersonModel(); 

    private async Task HandleValidSubmit()
    {
        _db.People.Add(personModel);
        await _db.SaveChangesAsync();
        
        // Send confirmation email
        var emailMessage = new EmailMessage
        {
            ToEmail = personModel.Email,
            Subject = "Booking Confirmation",
            Body =  $"Dear {personModel.FirstName},\n\n" +
           "Thank you for your booking. Your reservation has been confirmed.\n\n" +
           "We have noted your special request: " + personModel.Message + "\n\n" +
           "We are looking forward to your visit and we are thrilled to make your stay enjoyable and memorable. " +
           "If you have any additional requests or questions, please don't hesitate to contact us.\n\n" +
           "Best regards,\n" +
           "[Gabriel&Meriam]\n"+


            $"\n\n\nHej {personModel.FirstName},\n\n" +
           "Tack för din bokning. Din bokning har bekräftats.\n\n" +
           "Vi har noterat ditt särskilda önskemål: " + personModel.Message + "\n\n" + 
           "Vi ser fram emot ditt besök och vi är ivriga att göra din vistelse trevlig och minnesvärd. " +
           "Om du har ytterligare önskemål eller frågor, tveka inte att kontakta oss.\n\n" +
           "Med vänliga hälsningar,\n" + "[Gabriel&Meriam]\n"


           
        };
        await EmailService.SendEmailAsync(emailMessage); 
        
        personModel = new PersonModel(); 

        // Navigate to success page
        NavigationManager.NavigateTo("/success", forceLoad: true);
    }
}